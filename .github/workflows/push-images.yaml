name: push-images
run-name: push images

on:
  pull_request:
    branches: [main]
    types: [closed]

permissions:
  contents: read
  id-token: write

jobs:
  build-images:
    if: ${{ github.event.pull_request.merged }}
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.REPO_IAM_ROLE }}
          aws-region: ${{ secrets.REPO_ECR_REGION }}
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-conf:
            system = aarch64-linux
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: DeterminateSystems/flake-checker-action@main
      - uses: docker/setup-qemu-action@v3
      - name: Build aarch64 image
        run: nix build -o container_aarch64 '#.packages.aarch64-linux.container_aarch64'
      - name: Build x86_64 image
        run: nix build -o container_x86_64 '#.packages.x86_64-linux.container_x86_64'
      - name: Load images into podman
        run: |
          podman load < container_aarch64
          podman load < container_x86_64
      - name: Login to ECR
        run: nix develop --command bash -c "aws ecr get-login-password --region ${{ secrets.REPO_ECR_REGION }}" | podman login --username AWS --password-stdin ${{ secrets.ACCOUNT_ECR_REPO }}
      - name: Create and push manifest
        run: |
          REPO="${{ secrets.ACCOUNT_ECR_REPO }}/lsyncd"
          TAG=$(date +'%Y-%m-%d_%H-%M')
          podman manifest create "$REPO:$TAG"
          podman manifest add "$REPO:$TAG" "localhost/lsyncd:latest-aarch64"
          podman manifest add "$REPO:$TAG" "localhost/lsyncd:latest-x86_64"
          podman manifest push --all --rm "$REPO:$TAG"
